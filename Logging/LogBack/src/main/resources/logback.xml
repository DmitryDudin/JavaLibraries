<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="5 seconds">

    <variable name="ROOT_LEVEL" value="ERROR"/>
    <property name="USER_HOME" value="/home/dmitry"/>
    <!--java -DUSER_HOME="/home/sebastien" MyApp2  -  start with system property-->

    <!--When multiple variables are needed, it may be more convenient to create a separate file
    that will contain all the variables-->
    <!--<property file="src/main/java/chapters/configuration/variables1.properties" />-->

    <!--************************************************************************************-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--<pattern>[%d{ISO8601}][%-5level][%-6.6thread][%logger{36}] - %msg%n</pattern>-->
            <Pattern>%d %-5level [%thread] [%X{rid}] %logger{0}: %msg%n</Pattern>
        </encoder>
        <!--<layout></layout>-->
    </appender>
    <!--************************************************************************************-->

    <appender name="ROOT_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/rootErrorFile.log</file>
        <encoder>
            <pattern>[%d{ISO8601}][%-5level][%-6.6thread][%logger{36}] - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>
                <!--logs/archive/rootErrorFiles/rootErrorFile-%d{yyyy-MM-dd_H-mm}.%i.log.gz--> <!--not working-->
                logs/archive/rootErrorFiles/rootErrorFile.%i.log.gz
            </fileNamePattern>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50KB</maxFileSize>
        </triggeringPolicy>
        <filter class="ch.qos.logback.classic.filters.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>
    <appender name="ASYNC_ROOT_ERROR_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <appender-ref ref="ROOT_ERROR_FILE"/>
    </appender>

    <!--************************************************************************************-->

    <appender name="ROOT_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/rootFile.log</file>
        <encoder>
            <pattern>[%d{ISO8601}][%-5level][%-6.6thread][%logger{36}] - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                <!--может содержать несколько %d, но только один является первичным - который указывает время опрокидывания,
                все остальные вспомогоательные должны содержать aux параметр-->
                logs/archive/rootFiles/%d{yyyy-MM-dd_HH-mm}/rootFile-%d{yyyy-MM-dd_H-mm, aux}.log.gz
            </fileNamePattern>  <!--without aux - rollover time period(указывает период опрокидывания)-->
            <maxHistory>5</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>  <!--max summary size of log archives-->
        </rollingPolicy>
    </appender>
    <appender name="ASYNC_ROOT_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <appender-ref ref="ROOT_FILE"/>
    </appender>

    <!--************************************************************************************-->
    <!--<logger name="ERROR_FILE" level="error" additivity="">
        <appender-ref ref="ASYNC_ROOT_ERROR_FILE"/>
    </logger>-->

    <logger name="ua.org.javatraining" level="debug"/> <!--в таком варианте аппендер наследуется от root!!!-->
    <logger name="ua.org.javatraining.branch1" level="debug" additivity="true"/>
    <logger name="ua.org.javatraining.branch2" level="INFO" additivity="true"/>
    <logger name="ua.org.javatraining.branch3" level="ERROR"/>


    <root level="debug">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC_ROOT_FILE"/>
        <appender-ref ref="ASYNC_ROOT_ERROR_FILE"/>
    </root>
    <!--************************************************************************************-->

</configuration>